{"version":3,"file":"createJsonPointer.js","sourceRoot":"","sources":["createJsonPointer.ts"],"names":[],"mappings":";;;;;;;;;;IAOA,kBAAyB,IAAiB,EAAE,MAAW;QACtD,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,UAAS,IAAS,EAAE,IAAY;YAC7D,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QACjC,CAAC,EAAE,MAAM,CAAC,CAAC;IACZ,CAAC;IAJD,4BAIC;IAED,gBAAgB,OAAe;QAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,OAAe;QAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED;QAAkB,kBAAqB;aAArB,UAAqB,EAArB,qBAAqB,EAArB,IAAqB;YAArB,6BAAqB;;QACtC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAS,IAAI,EAAE,IAAI;YACzC,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;QAA2B,kBAAqB;aAArB,UAAqB,EAArB,qBAAqB,EAArB,IAAqB;YAArB,6BAAqB;;QAC/C,MAAM,CAAC;YACN,QAAQ,EAAE;gBACT,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,MAAM,CAAC,OAAO,CAAC,EAAf,CAAe,CAAC,CAAC;YACjD,CAAC,EAAE,QAAQ;gBACV,MAAM,CAAC,QAAQ,eAAI,QAAQ,EAAE;YAC9B,CAAC;YACD,IAAI,EAAE,UAAS,OAAe;gBAC7B,MAAM,CAAC,iBAAiB,eAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACvD,CAAC;YACD,GAAG,EAAE;gBAAa,MAAM,CAAC,iBAAiB,eAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACtF,CAAC;SACD,CAAC;IACH,CAAC;;IACD,kBAAe,iBAAiB,CAAC","sourcesContent":["export interface JsonPointer {\n\tsegments(): string[];\n\ttoString(): string;\n\tpush(segment: String): JsonPointer;\n\tpop(): JsonPointer;\n}\n\nexport function navigate(path: JsonPointer, target: any) {\n\treturn path.segments().reduce(function(prev: any, next: string) {\n\t\treturn prev ? prev[next] : prev;\n\t}, target);\n}\n\nfunction decode(segment: string) {\n\treturn segment.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n\nfunction encode(segment: string) {\n\treturn segment.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\nfunction toString(...segments: string[]): string {\n\treturn segments.reduce(function(prev, next) {\n\t\treturn prev + '/' + encode(next);\n\t});\n}\n\nfunction createJsonPointer(...segments: string[]): JsonPointer {\n\treturn {\n\t\tsegments: function() {\n\t\t\treturn segments.map(segment => decode(segment));\n\t\t}, toString() {\n\t\t\treturn toString(...segments);\n\t\t},\n\t\tpush: function(segment: string) {\n\t\t\treturn createJsonPointer(...segments.concat(segment));\n\t\t},\n\t\tpop: function() { return createJsonPointer(...segments.slice(0, segments.length - 1));\n\t\t}\n\t};\n}\nexport default createJsonPointer;\n"]}