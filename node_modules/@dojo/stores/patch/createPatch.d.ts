import { Operation } from './createOperation';
export interface Patch<T, U> {
    operations: Operation[];
    apply(target: T): U;
    toString(): String;
}
export declare type PatchMapEntry<T, U> = {
    id: string;
    patch: Patch<T, U>;
};
export declare function diff<T>(to: T): Patch<any, T>;
export declare function diff<T, U>(to: U, from: T): Patch<T, U>;
declare function createPatch(operations: Operation[]): {
    operations: Operation[];
    apply(this: Patch<any, any>, target: any): any;
    toString(this: Patch<any, any>): string;
};
export default createPatch;
