{"version":3,"file":"createOperation.js","sourceRoot":"","sources":["createOperation.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEqual } from '../utils';\nimport createJsonPointer, { JsonPointer } from './createJsonPointer';\nexport const enum OperationType {\n\tAdd,\n\tRemove,\n\tReplace,\n\tCopy,\n\tMove,\n\tTest\n}\n\nexport interface Operation {\n\top: string;\n\tpath: JsonPointer;\n\ttoString(): string;\n\tapply(target: any): any;\n}\n\nexport interface Add extends Operation {\n\tvalue: any;\n}\n\nfunction navigatePath(target: any, path: JsonPointer) {\n\tlet currentPath = '';\n\tlet lastSegment = '';\n\tconst pathSegments = path.segments();\n\tpathSegments.forEach(\n\t\tfunction(segment, index) {\n\t\t\tcurrentPath += `/${segment}`;\n\t\t\tif (!target) {\n\t\t\t\tthrow new Error(`Invalid path: ${currentPath} doesn't exist in target`);\n\t\t\t}\n\t\t\telse if (index + 1 < pathSegments.length) {\n\t\t\t\ttarget = target[segment];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlastSegment = segment;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn {\n\t\tobject: target,\n\t\tproperty: lastSegment\n\t};\n}\n\nfunction add(this: Add, target: any) {\n\tconst applyTo = navigatePath(target, this.path);\n\tapplyTo.object[applyTo.property] = this.value;\n\n\treturn target;\n}\n\nfunction remove(this: Remove, target: any) {\n\tconst applyTo = navigatePath(target, this.path);\n\tdelete applyTo.object[applyTo.property];\n\n\treturn target;\n}\n\nfunction replace(this: Replace, target: any) {\n\tconst applyTo = navigatePath(target, this.path);\n\tif (!(applyTo.property in applyTo.object)) {\n\t\tthrow new Error(`Cannot replace undefined path: ${this.path.toString()} on object`);\n\t}\n\tapplyTo.object[applyTo.property] = this.value;\n\n\treturn target;\n}\n\nfunction copyOrMove(from: JsonPointer, to: JsonPointer, target: any, toDelete: boolean) {\n\tconst moveFrom = navigatePath(target, from);\n\tif (!(moveFrom.property in moveFrom.object)) {\n\t\tthrow new Error(`Cannot move from undefined path: ${from.toString()} on object`);\n\t}\n\n\tconst applyTo = navigatePath(target, to);\n\n\tapplyTo.object[applyTo.property] = moveFrom.object[moveFrom.property];\n\tif (toDelete) {\n\t\tdelete moveFrom.object[moveFrom.property];\n\t}\n\n}\n\nfunction move(this: Move, target: any) {\n\tcopyOrMove(this.from, this.path, target, true);\n\treturn target;\n}\n\nfunction copy(this: Copy, target: any) {\n\tcopyOrMove(this.from, this.path, target, false);\n\treturn target;\n}\n\nfunction test(this: Test, target: any) {\n\tconst applyTo = navigatePath(target, this.path);\n\treturn isEqual(applyTo.object[applyTo.property], this.value);\n}\n\nexport interface Remove extends Operation {}\n\nexport interface Replace extends Operation {\n\tvalue: any;\n\toldValue: any;\n}\n\nexport interface Move extends Operation {\n\tfrom: JsonPointer;\n}\n\nexport interface Copy extends Operation {\n\tfrom: JsonPointer;\n}\n\nexport interface Test extends Operation {\n\tvalue: any;\n}\n\nfunction getPath(path: JsonPointer | string[]) {\n\tif (Array.isArray(path)) {\n\t\treturn createJsonPointer(...path);\n\t}\n\telse {\n\t\treturn path;\n\t}\n}\n\nfunction toString(this: Operation & { value?: any, from?: any } ) {\n\tlet jsonObj: any = {};\n\tjsonObj.op = this.op;\n\tjsonObj.path = this.path.toString();\n\tif (this.value) {\n\t\tjsonObj.value = this.value;\n\t}\n\tif (this.from) {\n\t\tjsonObj.from = this.from.toString();\n\t}\n\n\treturn JSON.stringify(jsonObj);\n}\nfunction createOperation(type: OperationType, path: JsonPointer | string[], value?: any, from?: JsonPointer | string[], oldValue?: any): Operation {\n\tswitch (type) {\n\t\tcase OperationType.Add:\n\t\t\treturn <Add> {\n\t\t\t\top: 'add',\n\t\t\t\tpath: getPath(path),\n\t\t\t\tvalue: value,\n\t\t\t\tapply: add,\n\t\t\t\ttoString: toString\n\t\t\t};\n\t\tcase OperationType.Remove:\n\t\t\treturn <Remove> {\n\t\t\t\top: 'remove',\n\t\t\t\tpath: getPath(path),\n\t\t\t\tapply: remove,\n\t\t\t\ttoString: toString\n\t\t\t};\n\t\tcase OperationType.Replace:\n\t\t\treturn <Replace> {\n\t\t\t\top: 'replace',\n\t\t\t\tpath: getPath(path),\n\t\t\t\tvalue: value,\n\t\t\t\toldValue: oldValue,\n\t\t\t\tapply: replace,\n\t\t\t\ttoString: toString\n\t\t\t};\n\t\tcase OperationType.Move:\n\t\t\tif (!from) {\n\t\t\t\tthrow new Error('From value is required for Move operations');\n\t\t\t}\n\t\t\treturn <Move> {\n\t\t\t\top: 'move',\n\t\t\t\tpath: getPath(path),\n\t\t\t\tfrom: getPath(from),\n\t\t\t\tapply: move,\n\t\t\t\ttoString: toString\n\t\t\t};\n\t\tcase OperationType.Copy:\n\t\t\tif (!from) {\n\t\t\t\tthrow new Error('From value is required in Copy operation');\n\t\t\t}\n\t\t\treturn <Copy> {\n\t\t\t\top: 'copy',\n\t\t\t\tpath: getPath(path),\n\t\t\t\tfrom: getPath(from),\n\t\t\t\tapply: copy,\n\t\t\t\ttoString: toString\n\t\t\t};\n\t\tcase OperationType.Test:\n\t\t\treturn <Test> {\n\t\t\t\top: 'test',\n\t\t\t\tpath: getPath(path),\n\t\t\t\tvalue: value,\n\t\t\t\tapply: test,\n\t\t\t\ttoString: toString\n\t\t\t};\n\t}\n}\nexport default createOperation;\n"]}