(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    function materialize(_a) {
        var source = _a.source, target = _a.target, apply = _a.apply;
        var initialUpdate = true;
        var subscription = source.observe().subscribe(function (update) {
            if (apply) {
                apply(target, update, source);
            }
            else if (initialUpdate) {
                initialUpdate = false;
                if (update.afterAll.length) {
                    target.add(update.afterAll);
                }
            }
            else {
                var adds = update.adds, updates = update.updates, deletes = update.deletes;
                if (adds.length) {
                    target.add(adds);
                }
                if (updates.length) {
                    target.put(updates);
                }
                if (deletes.length) {
                    target.delete(deletes);
                }
            }
        });
        return {
            destroy: function () {
                subscription.unsubscribe();
            }
        };
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = materialize;
});
//# sourceMappingURL=materialize.js.map