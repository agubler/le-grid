import { Handle } from '@dojo/core/interfaces';
import { MappedQueryTransformResult, QueryTransformResult, TrackableStoreDelta } from './createQueryTransformResult';
import { StoreDelta } from './mixins/createObservableStoreMixin';
import { Store } from './createStore';
export interface Materialization<I, S extends QueryTransformResult<I, any>, T extends Store<I, any, any>> {
    source: S;
    target: T;
    apply?(target: T, update: StoreDelta<I>, source: S): void;
}
export interface MappedMaterialization<I, S extends MappedQueryTransformResult<I, any>, T extends Store<I, any, any>> extends Materialization<I, S, T> {
    apply?(target: T, update: TrackableStoreDelta<I>, source: S): void;
}
export default function materialize<I, S extends QueryTransformResult<I, any>, T extends Store<I, any, any>>({source, target, apply}: Materialization<I, S, T>): Handle;
