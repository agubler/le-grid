(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../../query/createFilter", "../../query/createStoreRange", "../../query/createSort", "./createObservableStoreMixin", "../createQueryTransformResult", "@dojo/shim/WeakMap"], factory);
    }
})(function (require, exports) {
    "use strict";
    var createFilter_1 = require("../../query/createFilter");
    var createStoreRange_1 = require("../../query/createStoreRange");
    var createSort_1 = require("../../query/createSort");
    var createObservableStoreMixin_1 = require("./createObservableStoreMixin");
    var createQueryTransformResult_1 = require("../createQueryTransformResult");
    var WeakMap_1 = require("@dojo/shim/WeakMap");
    /**
     * Check if this is a filter query or just a test function
     * @param filterOrTest
     * @returns {boolean}
     */
    function isFilter(filterOrTest) {
        return typeof filterOrTest !== 'function' && filterOrTest.queryType === 0 /* Filter */;
    }
    exports.isFilter = isFilter;
    /**
     * Check if this is a sort query or just a comparator
     * @param sortOrComparator
     * @returns {boolean}
     */
    function isSort(sortOrComparator) {
        var paramType = typeof sortOrComparator;
        return paramType !== 'function' && paramType !== 'string' && typeof sortOrComparator.apply === 'function';
    }
    exports.isSort = isSort;
    var instanceStateMap = new WeakMap_1.default();
    function createQueryTransformMixin() {
        var queryMixin = {
            query: function (query) {
                return createQueryTransformResult_1.default({
                    source: this,
                    queriesAndTransformations: [query],
                    fetchAroundUpdates: instanceStateMap.get(this).fetchAroundUpdates
                });
            },
            filter: function (filterOrTest) {
                var filter;
                if (isFilter(filterOrTest)) {
                    filter = filterOrTest;
                }
                else {
                    filter = createFilter_1.default().custom(filterOrTest);
                }
                return this.query(filter);
            },
            range: function (rangeOrStart, count) {
                var range;
                if (typeof count !== 'undefined') {
                    range = createStoreRange_1.default(rangeOrStart, count);
                }
                else {
                    range = rangeOrStart;
                }
                return this.query(range);
            },
            sort: function (sortOrComparator, descending) {
                var sort;
                if (isSort(sortOrComparator)) {
                    sort = sortOrComparator;
                }
                else {
                    sort = createSort_1.default(sortOrComparator, descending);
                }
                return this.query(sort);
            },
            transform: function (transformation, idTransform) {
                var options = {
                    source: this,
                    queriesAndTransformations: [{ transformation: transformation, idTransform: idTransform }],
                    fetchAroundUpdates: instanceStateMap.get(this).fetchAroundUpdates
                };
                if (idTransform) {
                    return createQueryTransformResult_1.default(options);
                }
                else {
                    return createQueryTransformResult_1.createQueryTransformResult(options);
                }
            }
        };
        return {
            mixin: queryMixin,
            initialize: function (instance, options) {
                instanceStateMap.set(instance, {
                    fetchAroundUpdates: (options && options.fetchAroundUpdates) || false
                });
            }
        };
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = createQueryTransformMixin;
    exports.createQueryStore = createObservableStoreMixin_1.createObservableStore
        .mixin(createQueryTransformMixin());
});
//# sourceMappingURL=createQueryTransformMixin.js.map