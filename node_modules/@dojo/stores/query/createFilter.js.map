{"version":3,"file":"createFilter.js","sourceRoot":"","sources":["createFilter.ts"],"names":[],"mappings":"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","sourcesContent":["import createJsonPointer, { JsonPointer, navigate } from '../patch/createJsonPointer';\nimport { isEqual } from '../utils';\nimport { Query, QueryType } from './interfaces';\n\nexport type FilterFunction<T> = (data: T[]) => T[];\nexport type ObjectPointer = JsonPointer | string;\n\nexport const enum FilterType {\n\tLessThan,\n\tGreaterThan,\n\tEqualTo,\n\tDeepEqualTo,\n\tIn,\n\tContains,\n\tNotEqualTo,\n\tNotDeepEqualTo,\n\tLessThanOrEqualTo,\n\tGreaterThanOrEqualTo,\n\tMatches,\n\tCustom,\n\tCompound\n}\n\nexport const enum BooleanOp {\n\tAnd,\n\tOr\n}\n\nfunction isBooleanOp(op: any): op is BooleanOp {\n\treturn op === BooleanOp.And || op === BooleanOp.Or;\n}\nexport type FilterChainMember<T> = SimpleFilter<T> | BooleanOp;\n\nexport interface FilterDescriptor {\n\treadonly filterType: FilterType;\n\treadonly path: ObjectPointer;\n\treadonly value: any;\n}\n\nexport type FilterArrayEntry = FilterDescriptor | BooleanOp | FilterArray;\n\nexport interface FilterArray extends Array<FilterArrayEntry> {}\n\nexport interface SimpleFilter<T> extends Query<T> {\n\treadonly filterType: FilterType;\n\treadonly test: (item: T) => boolean;\n\treadonly filterChain?: FilterChainMember<T>[];\n\treadonly path?: ObjectPointer;\n\treadonly value?: any;\n}\n\nexport interface BooleanFilter<T> extends SimpleFilter<T> {\n\tlessThan(path: ObjectPointer, value: number): Filter<T>;\n\tlessThanOrEqualTo(path: ObjectPointer, value: number): Filter<T>;\n\tgreaterThan(path: ObjectPointer, value: number): Filter<T>;\n\tgreaterThanOrEqualTo(path: ObjectPointer, value: number): Filter<T>;\n\tmatches(path: ObjectPointer, test: RegExp): Filter<T>;\n\tin<U>(path: ObjectPointer, value: U[]): Filter<T>;\n\tcontains<U>(path: ObjectPointer, value: U): Filter<T>;\n\tequalTo<U>(path: ObjectPointer, value: U): Filter<T>;\n\tdeepEqualTo<U extends {}>(path: ObjectPointer, value: U): Filter<T>;\n\tdeepEqualTo<U>(path: ObjectPointer, value: U[]): Filter<T>;\n\tnotEqualTo<U>(path: ObjectPointer, value: U): Filter<T>;\n\tnotDeepEqualTo<U extends {}>(path: ObjectPointer, value: U): Filter<T>;\n\tnotDeepEqualTo<U>(path: ObjectPointer, value: U[]): Filter<T>;\n\tcustom(test: (item: T) => boolean): Filter<T>;\n}\n\nexport interface Filter<T> extends BooleanFilter<T> {\n\tand(filter: Filter<T>): Filter<T>;\n\tand(): BooleanFilter<T>;\n\tor(filter: Filter<T>): Filter<T>;\n\tor(): BooleanFilter<T>;\n}\n\nfunction isFilter<T>(filterOrFunction: FilterChainMember<T>): filterOrFunction is Filter<T> {\n\treturn typeof filterOrFunction !== 'function'  && (<any> filterOrFunction).apply;\n}\n\nfunction createFilterOrReturnOp<T>(descriptorOrOp: FilterDescriptor | BooleanOp) {\n\tif (isBooleanOp(descriptorOrOp)) {\n\t\treturn descriptorOrOp;\n\t}\n\telse {\n\t\treturn createComparator<T>(\n\t\t\tdescriptorOrOp.filterType,\n\t\t\tdescriptorOrOp.value,\n\t\t\tdescriptorOrOp.path\n\t\t);\n\t}\n}\n\nfunction createFilter<T>(filterDescriptors?: FilterDescriptor | FilterArray, serializer?: (filter: Filter<T>) => string): Filter<T> {\n\tlet filters: FilterChainMember<T>[] = [];\n\tif (filterDescriptors) {\n\t\tif (Array.isArray(filterDescriptors)) {\n\t\t\tfilters = filterDescriptors.map((descriptorChainMember) => {\n\t\t\t\tif (Array.isArray(descriptorChainMember)) {\n\t\t\t\t\treturn createFilter<T>(descriptorChainMember);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn createFilterOrReturnOp<T>(descriptorChainMember);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfilters.push(\n\t\t\t\tcreateComparator<T>(\n\t\t\t\t\tfilterDescriptors.filterType,\n\t\t\t\t\tfilterDescriptors.value,\n\t\t\t\t\tfilterDescriptors.path\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn createFilterHelper(filters, serializer || serializeFilter);\n}\n\nexport default createFilter;\n\nfunction createFilterHelper<T>(filters: FilterChainMember<T>[], serializer: (filter: Filter<T>) => string): Filter<T> {\n\t// Small helpers to abstract common operations for building comparator filters\n\t// The main helper delegates to the factory, adding and AND operation before the next filter,\n\t// because by default each filter in a chain will be ANDed with the previous.\n\tfunction comparatorFilterHelper(filterType: FilterType, value: any, path?: ObjectPointer): Filter<T> {\n\t\tpath = path || createJsonPointer();\n\t\tconst needsOperator = filters.length > 0 &&\n\t\t\t(filters[filters.length - 1] !== BooleanOp.And && filters[filters.length - 1] !== BooleanOp.Or);\n\t\tconst newFilters = needsOperator ? [ ...filters, BooleanOp.And, createComparator<T>(filterType, value, path) ] :\n\t\t\t[ ...filters, createComparator<T>(filterType, value, path) ];\n\t\treturn createFilterHelper(newFilters, serializer);\n\t}\n\n\tconst filter: Filter<T> = {\n\t\ttest(item) {\n\t\t\treturn applyFilterChain(item, filters);\n\t\t},\n\t\tfilterType: FilterType.Compound,\n\t\tapply(this: Filter<T>, data: T[]) {\n\t\t\treturn data.filter(this.test);\n\t\t},\n\t\tfilterChain: filters,\n\t\ttoString(this: Filter<T>, filterSerializer?: ((query: Query<T>) => string) | ((filter: Filter<T>) => string)) {\n\t\t\treturn (filterSerializer || serializer)(this);\n\t\t},\n\t\tand(this: Filter<T>, newFilter?: Filter<T>) {\n\t\t\tlet newFilters: FilterChainMember<T>[] = [];\n\t\t\tif (newFilter) {\n\t\t\t\tnewFilters.push(this, BooleanOp.And, newFilter);\n\t\t\t}\n\t\t\telse if (filters.length) {\n\t\t\t\tnewFilters.push(...filters, BooleanOp.And);\n\t\t\t}\n\t\t\treturn createFilterHelper(newFilters, serializer);\n\t\t},\n\t\tor(this: Filter<T>, newFilter?: Filter<T>) {\n\t\t\tlet newFilters: FilterChainMember<T>[] = [];\n\t\t\tif (newFilter) {\n\t\t\t\tnewFilters.push(this, BooleanOp.Or, newFilter);\n\t\t\t}\n\t\t\telse if (filters.length) {\n\t\t\t\tnewFilters.push(...filters, BooleanOp.Or);\n\t\t\t}\n\t\t\treturn createFilterHelper(newFilters, serializer);\n\t\t},\n\t\tlessThan(path: ObjectPointer, value: number) {\n\t\t\treturn comparatorFilterHelper(FilterType.LessThan, value, path);\n\t\t},\n\t\tlessThanOrEqualTo(path: ObjectPointer, value: number) {\n\t\t\treturn comparatorFilterHelper(FilterType.LessThanOrEqualTo, value, path);\n\t\t},\n\t\tgreaterThan(path: ObjectPointer, value: number) {\n\t\t\treturn comparatorFilterHelper(FilterType.GreaterThan, value, path);\n\t\t},\n\t\tgreaterThanOrEqualTo(path: ObjectPointer, value: number) {\n\t\t\treturn comparatorFilterHelper(FilterType.GreaterThanOrEqualTo, value, path);\n\t\t},\n\t\tmatches(path: ObjectPointer, value: RegExp) {\n\t\t\treturn comparatorFilterHelper(FilterType.Matches, value, path);\n\t\t},\n\t\t'in': function(path: ObjectPointer, value: any) {\n\t\t\treturn comparatorFilterHelper(FilterType.In, value, path);\n\t\t},\n\t\tcontains(path: ObjectPointer, value: any) {\n\t\t\treturn comparatorFilterHelper(FilterType.Contains, value, path);\n\t\t},\n\t\tequalTo(path: ObjectPointer, value: any) {\n\t\t\treturn comparatorFilterHelper(FilterType.EqualTo, value, path);\n\t\t},\n\t\tdeepEqualTo(path: ObjectPointer, value: any) {\n\t\t\treturn comparatorFilterHelper(FilterType.DeepEqualTo, value, path);\n\t\t},\n\t\tnotEqualTo(path: ObjectPointer, value: any) {\n\t\t\treturn comparatorFilterHelper(FilterType.NotEqualTo, value, path);\n\t\t},\n\t\tnotDeepEqualTo(path: ObjectPointer, value: any) {\n\t\t\treturn comparatorFilterHelper(FilterType.NotDeepEqualTo, value, path);\n\t\t},\n\t\tcustom(test: (item: T) => boolean) {\n\t\t\treturn comparatorFilterHelper(FilterType.Custom, test);\n\t\t},\n\t\tqueryType: QueryType.Filter,\n\t\tincremental: true\n\t};\n\n\treturn filter;\n}\n\nfunction applyFilterChain<T>(item: T, filterChain: FilterChainMember<T>[]): boolean {\n\tlet ordFilterSections: FilterChainMember<T>[][] = [];\n\tlet startOfSlice = 0;\n\t// Ands have higher precedence, so split into chains of\n\t// ands between ors.\n\tfilterChain.forEach(function(chainMember, i) {\n\t\tif (chainMember === BooleanOp.Or) {\n\t\t\tordFilterSections.push(filterChain.slice(startOfSlice, i));\n\t\t\tstartOfSlice = i + 1;\n\t\t}\n\t});\n\n\tif (startOfSlice < filterChain.length) {\n\t\tordFilterSections.push(filterChain.slice(startOfSlice, filterChain.length));\n\t}\n\n\t// These sections are or'd together so only\n\t// one has to pass\n\treturn ordFilterSections.some(function(filterChain: FilterChainMember<T>[]) {\n\t\t// The individual filters are and'd together, so if any\n\t\t// fails the whole section fails\n\t\treturn filterChain.every(function(filterOrAnd: FilterChainMember<T>) {\n\t\t\tif (isFilter(filterOrAnd)) {\n\t\t\t\treturn filterOrAnd.test(item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction createComparator<T>(operator: FilterType, value: any, path: ObjectPointer): SimpleFilter<T> {\n\tpath = typeof path === 'string' ? createJsonPointer(path) : path;\n\tlet test: (property: any) => boolean;\n\tconst filterType: FilterType = operator;\n\tlet operatorString: string;\n\tswitch (operator) {\n\t\tcase FilterType.LessThan:\n\t\t\ttest = function(property) {\n\t\t\t\treturn property < value;\n\t\t\t};\n\t\t\toperatorString = 'lt';\n\t\t\tbreak;\n\t\tcase FilterType.LessThanOrEqualTo:\n\t\t\ttest = function(property) {\n\t\t\t\treturn property <= value;\n\t\t\t};\n\t\t\toperatorString = 'lte';\n\t\t\tbreak;\n\t\tcase FilterType.GreaterThan:\n\t\t\ttest = function(property) {\n\t\t\t\treturn property > value;\n\t\t\t};\n\t\t\toperatorString = 'gt';\n\t\t\tbreak;\n\t\tcase FilterType.GreaterThanOrEqualTo:\n\t\t\ttest = function(property) {\n\t\t\t\treturn property >= value;\n\t\t\t};\n\t\t\toperatorString = 'gte';\n\t\t\tbreak;\n\t\tcase FilterType.EqualTo:\n\t\t\ttest = function(property) {\n\t\t\t\treturn property === value;\n\t\t\t};\n\t\t\toperatorString = 'eq';\n\t\t\tbreak;\n\t\tcase FilterType.NotEqualTo:\n\t\t\ttest = function(property) {\n\t\t\t\treturn property !== value;\n\t\t\t};\n\t\t\toperatorString = 'ne';\n\t\t\tbreak;\n\t\tcase FilterType.DeepEqualTo:\n\t\t\ttest = function(property) {\n\t\t\t\treturn isEqual(property, value);\n\t\t\t};\n\t\t\toperatorString = 'eq';\n\t\t\tbreak;\n\t\tcase FilterType.NotDeepEqualTo:\n\t\t\ttest = function(property) {\n\t\t\t\treturn !isEqual(property, value);\n\t\t\t};\n\t\t\toperatorString = 'ne';\n\t\t\tbreak;\n\t\tcase FilterType.Contains:\n\t\t\ttest = function(propertyOrItem) {\n\t\t\t\tif (Array.isArray(propertyOrItem)) {\n\t\t\t\t\treturn propertyOrItem.indexOf(value) > -1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn propertyOrItem && Boolean(propertyOrItem[value]);\n\t\t\t\t}\n\t\t\t};\n\t\t\toperatorString = 'contains';\n\t\t\tbreak;\n\t\tcase FilterType.In:\n\t\t\ttest = function(propertyOrItem) {\n\t\t\t\treturn Array.isArray(value) && value.indexOf(propertyOrItem) > -1;\n\t\t\t};\n\t\t\toperatorString = 'in';\n\t\t\tbreak;\n\t\tcase FilterType.Matches:\n\t\t\ttest = function(property) {\n\t\t\t\treturn value.test(property);\n\t\t\t};\n\t\t\tbreak;\n\t\tcase FilterType.Custom:\n\t\t\ttest = value;\n\t\t\tbreak;\n\t\t// unreachable lines\n\t\t// default:\n\t\t// return null;\n\t}\n\treturn {\n\t\ttest(item: T) {\n\t\t\tlet propertyValue: any = navigate(<JsonPointer> path, item);\n\t\t\treturn test(propertyValue);\n\t\t},\n\t\tapply(this: Filter<T>, data: T[]) {\n\t\t\treturn data.filter(this.test);\n\t\t},\n\t\ttoString() {\n\t\t\tif (!operatorString) {\n\t\t\t\tthrow Error('Cannot parse this filter type to an RQL query string');\n\t\t\t}\n\t\t\treturn `${operatorString}(${path.toString()}, ${JSON.stringify(value)})`;\n\t\t},\n\t\tpath: path,\n\t\tvalue: value,\n\t\tfilterType: filterType,\n\t\tqueryType: QueryType.Filter\n\t};\n}\n\n//// Default serialization function\nfunction serializeFilter(filter: Filter<any>): string {\n\tlet operator = '&';\n\tif (filter.filterChain && filter.filterChain.length > 0) {\n\t\treturn filter.filterChain.reduce(function(prev: string, next: FilterChainMember<any>) {\n\t\t\tif (isFilter(next)) {\n\t\t\t\tconst start = next.filterChain ? '(' : '';\n\t\t\t\tconst end = next.filterChain ? ')' : '';\n\t\t\t\treturn prev + (prev ? operator : '') + (prev ? start : '') + next.toString() + (prev ? end : '');\n\t\t\t}\n\t\t\telse if (next === BooleanOp.And) {\n\t\t\t\toperator = '&';\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\telse {\n\t\t\t\toperator = '|';\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t}, '');\n\t}\n\telse {\n\t\treturn '';\n\t}\n}\n"]}