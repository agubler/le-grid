import { Query } from './interfaces';
import { JsonPointer } from '../patch/createJsonPointer';
export declare type SortParameter<T> = ((a: T, b: T) => number) | string | JsonPointer;
export interface Sort<T> extends Query<T> {
    readonly sortParameters: SortParameter<T>[];
    readonly descending?: boolean[];
}
declare function createSort<T>(comparatorOrProperty: SortParameter<T> | SortParameter<T>[], descending?: boolean | boolean[], serializer?: (sort: Sort<T>) => string): Sort<T>;
export default createSort;
