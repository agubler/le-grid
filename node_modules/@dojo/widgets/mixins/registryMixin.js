(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/shim/WeakMap", "@dojo/shim/array", "@dojo/compose/bases/createEvented"], factory);
    }
})(function (require, exports) {
    "use strict";
    var WeakMap_1 = require("@dojo/shim/WeakMap");
    var array_1 = require("@dojo/shim/array");
    var createEvented_1 = require("@dojo/compose/bases/createEvented");
    var internalRegistryMap = new WeakMap_1.default();
    var registryFactory = createEvented_1.default.mixin({
        className: 'RegistryMixin',
        mixin: {
            diffPropertyRegistry: function (previousValue, value) {
                return {
                    changed: previousValue !== value,
                    value: value
                };
            },
            get registry() {
                return internalRegistryMap.get(this);
            }
        },
        initialize: function (instance, options) {
            instance.own(instance.on('properties:changed', function (evt) {
                if (array_1.includes(evt.changedPropertyKeys, 'registry')) {
                    internalRegistryMap.set(instance, evt.properties.registry);
                }
            }));
            var registry = instance.properties.registry;
            if (registry) {
                internalRegistryMap.set(instance, registry);
            }
        }
    });
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = registryFactory;
});
//# sourceMappingURL=registryMixin.js.map