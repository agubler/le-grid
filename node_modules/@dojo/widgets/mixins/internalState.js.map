{"version":3,"file":"internalState.js","sourceRoot":"","sources":["internalState.ts"],"names":[],"mappings":";;;;;;;;;;IACA,qEAAgE;IAShE,IAAM,oBAAoB,GAAyB,wBAAc,CAAC,KAAK,CAAC;QACvE,UAAU,YAAC,QAAuB;YACjC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE;gBACzC,QAAQ,CAAC,UAAU,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;KACD,CAAC,CAAC;;IAEH,kBAAe,oBAAoB,CAAC","sourcesContent":["import { State, Stateful, StatefulOptions } from '@dojo/interfaces/bases';\nimport createStateful from '@dojo/compose/bases/createStateful';\nimport { ComposeFactory } from '@dojo/compose/compose';\n\nexport type InternalState = Stateful<State> & {\n\tinvalidate(): void;\n}\n\nexport interface InternalStateFactory extends ComposeFactory<Stateful<State>, StatefulOptions<State>> {}\n\nconst internalStateFactory: InternalStateFactory = createStateful.mixin({\n\tinitialize(instance: InternalState) {\n\t\tinstance.own(instance.on('state:changed', () => {\n\t\t\tinstance.invalidate();\n\t\t}));\n\t}\n});\n\nexport default internalStateFactory;\n"]}