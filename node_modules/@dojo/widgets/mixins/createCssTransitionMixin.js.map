{"version":3,"file":"createCssTransitionMixin.js","sourceRoot":"","sources":["createCssTransitionMixin.ts"],"names":[],"mappings":";;;;;;;;;;IACA,iDAAgE;IAEhE,qEAAgE;IAyB2F,CAAC;IAE5J,IAAM,wBAAwB,GAA8B,iBAAO,CAAC;QAClE,cAAc,EAAE;YACf;gBACO,IAAA,eAA8C,EAA5C,kCAAc,EAAE,gCAAa,CAAgB;gBACrD,MAAM,CAAC,EAAE,cAAc,gBAAA,EAAE,aAAa,eAAA,EAAE,CAAC;YAC1C,CAAC;SACD;KACD,CAAC;SACD,KAAK,CAAC,wBAAc,CAAC,CAAC;;IAExB,kBAAe,wBAAwB,CAAC","sourcesContent":["import { VNodeProperties } from '@dojo/interfaces/vdom';\nimport compose, { ComposeFactory } from '@dojo/compose/compose';\nimport { NodeAttributeFunction } from './../interfaces';\nimport createStateful from '@dojo/compose/bases/createStateful';\nimport { Stateful, StatefulOptions } from '@dojo/interfaces/bases';\n\nexport type CssTransitionMixinState = {\n\t/**\n\t * The class of the CSS animation to be applied as the widget enters the dom\n\t */\n\tenterAnimation?: string;\n\n\t/**\n\t * The class of the CSS animation to be applied as the widget exits the dom\n\t */\n\texitAnimation?: string;\n}\n\nexport interface CssTransition {\n\t/**\n\t * An array of node attribute functions which return additional attributes that should be mixed into\n\t * the final VNode during a render call\n\t */\n\tnodeAttributes: NodeAttributeFunction<this>[];\n}\n\nexport type CssTransitionMixin<S extends CssTransitionMixinState> = CssTransition & Stateful<S>;\n\nexport interface CssTransitionMixinFactory extends ComposeFactory<CssTransitionMixin<CssTransitionMixinState>, StatefulOptions<CssTransitionMixinState>> {};\n\nconst createCssTransitionMixin: CssTransitionMixinFactory = compose({\n\t\tnodeAttributes: [\n\t\t\tfunction (this: CssTransitionMixin<CssTransitionMixinState>): VNodeProperties {\n\t\t\t\tconst { enterAnimation, exitAnimation } = this.state;\n\t\t\t\treturn { enterAnimation, exitAnimation };\n\t\t\t}\n\t\t]\n\t})\n\t.mixin(createStateful);\n\nexport default createCssTransitionMixin;\n"]}