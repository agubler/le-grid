import { Evented } from '@dojo/interfaces/bases';
import { ComposeFactory } from '@dojo/compose/compose';
/**
 * A representation of the css-module class names
 * to be applied where each class in appliedClasses
 * is used.
 */
export declare type CSSModuleClassNames = {
    [key: string]: boolean;
};
/**
 * The object returned by getClasses.
 */
export declare type AppliedClasses<T> = {
    [P in keyof T]?: CSSModuleClassNames;
};
/**
 * Properties required for the themeable mixin
 */
export interface ThemeableProperties {
    theme?: {};
    overrideClasses?: {};
}
/**
 * Themeable Options
 */
export interface ThemeableOptions {
    properties: ThemeableProperties;
}
/**
 * Themeable Mixin
 */
export interface ThemeableMixin<P> extends Evented {
    theme: AppliedClasses<P>;
}
/**
 * Themeable
 */
export interface Themeable<P> extends ThemeableMixin<P> {
    baseTheme: P;
    properties: ThemeableProperties;
}
/**
 * Compose Themeable Factory interface
 */
export interface ThemeableFactory extends ComposeFactory<ThemeableMixin<{}>, ThemeableOptions> {
}
/**
 * Themeable Factory
 */
declare const themeableFactory: ThemeableFactory;
export default themeableFactory;
