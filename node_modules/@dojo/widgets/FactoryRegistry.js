(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/compose/compose", "@dojo/shim/Promise", "@dojo/shim/Map"], factory);
    }
})(function (require, exports) {
    "use strict";
    var compose_1 = require("@dojo/compose/compose");
    var Promise_1 = require("@dojo/shim/Promise");
    var Map_1 = require("@dojo/shim/Map");
    var FactoryRegistry = (function () {
        function FactoryRegistry() {
            this.registry = new Map_1.default();
        }
        FactoryRegistry.prototype.has = function (factoryLabel) {
            return this.registry.has(factoryLabel);
        };
        FactoryRegistry.prototype.define = function (factoryLabel, registryItem) {
            if (this.registry.has(factoryLabel)) {
                throw new Error("factory has already been registered for '" + factoryLabel + "'");
            }
            this.registry.set(factoryLabel, registryItem);
        };
        FactoryRegistry.prototype.get = function (factoryLabel) {
            var _this = this;
            if (!this.has(factoryLabel)) {
                return null;
            }
            var item = this.registry.get(factoryLabel);
            if (compose_1.isComposeFactory(item) || item instanceof Promise_1.default) {
                return item;
            }
            var promise = item();
            this.registry.set(factoryLabel, promise);
            return promise.then(function (factory) {
                _this.registry.set(factoryLabel, factory);
                return factory;
            }, function (error) {
                throw error;
            });
        };
        return FactoryRegistry;
    }());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = FactoryRegistry;
});
//# sourceMappingURL=FactoryRegistry.js.map