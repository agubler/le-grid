{"version":3,"file":"createWidgetBase.js","sourceRoot":"","sources":["createWidgetBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { isComposeFactory } from '@dojo/compose/compose';\nimport createEvented from '@dojo/compose/bases/createEvented';\nimport {\n\tDNode,\n\tPropertiesChangeEvent,\n\tWidget,\n\tWidgetMixin,\n\tWidgetOptions,\n\tWidgetProperties,\n\tWidgetBaseFactory,\n\tFactoryRegistryItem,\n\tPropertiesChangeRecord,\n\tPropertyChangeRecord\n} from './interfaces';\nimport { VNode, VNodeProperties } from '@dojo/interfaces/vdom';\nimport { assign } from '@dojo/core/lang';\nimport WeakMap from '@dojo/shim/WeakMap';\nimport Promise from '@dojo/shim/Promise';\nimport Map from '@dojo/shim/Map';\nimport { v, registry, isWNode } from './d';\n\ninterface WidgetInternalState {\n\tchildren: DNode[];\n\tdirty: boolean;\n\twidgetClasses: string[];\n\tcachedVNode?: VNode | string;\n\tinitializedFactoryMap: Map<string, Promise<WidgetBaseFactory>>;\n\tproperties: WidgetProperties;\n\tpreviousProperties: WidgetProperties;\n\thistoricChildrenMap: Map<string | Promise<WidgetBaseFactory> | WidgetBaseFactory, Widget<WidgetProperties>>;\n\tcurrentChildrenMap: Map<string | Promise<WidgetBaseFactory> | WidgetBaseFactory, Widget<WidgetProperties>>;\n\tdiffPropertyFunctionMap: Map<string, string>;\n};\n\n/**\n * Internal state map for widget instances\n */\nconst widgetInternalStateMap = new WeakMap<Widget<WidgetProperties>, WidgetInternalState>();\n\nconst propertyFunctionNameRegex = /^diffProperty(.*)/;\n\nfunction getFromRegistry(instance: Widget<WidgetProperties>, factoryLabel: string): FactoryRegistryItem | null {\n\tif (instance.registry && instance.registry.has(factoryLabel)) {\n\t\treturn instance.registry.get(factoryLabel);\n\t}\n\treturn registry.get(factoryLabel);\n}\n\nfunction dNodeToVNode(instance: Widget<WidgetProperties>, dNode: DNode): VNode | string | null {\n\tconst internalState = widgetInternalStateMap.get(instance);\n\n\tif (typeof dNode === 'string' || dNode === null) {\n\t\treturn dNode;\n\t}\n\n\tif (isWNode(dNode)) {\n\t\tconst { children, properties } = dNode;\n\t\tconst { id } = properties;\n\n\t\tlet { factory } = dNode;\n\t\tlet child: Widget<WidgetProperties>;\n\n\t\tif (typeof factory === 'string') {\n\t\t\tconst item = getFromRegistry(instance, factory);\n\n\t\t\tif (isComposeFactory(item)) {\n\t\t\t\tfactory = <WidgetBaseFactory> item;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (item && !internalState.initializedFactoryMap.has(factory)) {\n\t\t\t\t\tconst promise = (<Promise<WidgetBaseFactory>> item).then((factory) => {\n\t\t\t\t\t\tinstance.invalidate();\n\t\t\t\t\t\treturn factory;\n\t\t\t\t\t});\n\t\t\t\t\tinternalState.initializedFactoryMap.set(factory, promise);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tconst childrenMapKey = id || factory;\n\t\tconst cachedChild = internalState.historicChildrenMap.get(childrenMapKey);\n\n\t\tif (cachedChild) {\n\t\t\tchild = cachedChild;\n\t\t\tif (properties) {\n\t\t\t\tchild.setProperties(properties);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tchild = factory({ properties });\n\t\t\tchild.own(child.on('invalidated', () => {\n\t\t\t\tinstance.invalidate();\n\t\t\t}));\n\t\t\tinternalState.historicChildrenMap.set(childrenMapKey, child);\n\t\t\tinstance.own(child);\n\t\t}\n\t\tif (!id && internalState.currentChildrenMap.has(factory)) {\n\t\t\tconst errorMsg = 'must provide unique keys when using the same widget factory multiple times';\n\t\t\tconsole.error(errorMsg);\n\t\t\tinstance.emit({ type: 'error', target: instance, error: new Error(errorMsg) });\n\t\t}\n\n\t\tchild.setChildren(children);\n\t\tinternalState.currentChildrenMap.set(childrenMapKey, child);\n\n\t\treturn child.__render__();\n\t}\n\n\tdNode.children = dNode.children\n\t\t.filter((child) => child !== null)\n\t\t.map((child: DNode) => {\n\t\t\treturn dNodeToVNode(instance, child);\n\t\t});\n\n\treturn dNode.render({ bind: instance });\n}\n\nfunction manageDetachedChildren(instance: Widget<WidgetProperties>): void {\n\tconst internalState = widgetInternalStateMap.get(instance);\n\n\tinternalState.historicChildrenMap.forEach((child, key) => {\n\t\tif (!internalState.currentChildrenMap.has(key) && internalState.historicChildrenMap.has(key)) {\n\t\t\tinternalState.historicChildrenMap.delete(key);\n\t\t\tchild.destroy();\n\t\t}\n\t});\n\tinternalState.currentChildrenMap.clear();\n}\n\nfunction formatTagNameAndClasses(tagName: string, classes: string[]) {\n\tif (classes.length) {\n\t\treturn `${tagName}.${classes.join('.')}`;\n\t}\n\treturn tagName;\n}\n\nconst createWidget: WidgetBaseFactory = createEvented\n\t.mixin<WidgetMixin<WidgetProperties>, WidgetOptions<WidgetProperties>>({\n\t\tmixin: {\n\t\t\tget properties(this: Widget<WidgetProperties>): WidgetProperties {\n\t\t\t\tconst { properties } = widgetInternalStateMap.get(this);\n\t\t\t\treturn properties;\n\t\t\t},\n\n\t\t\tclasses: [],\n\n\t\t\tgetNode(): DNode {\n\t\t\t\tconst tag = formatTagNameAndClasses(this.tagName, this.classes);\n\t\t\t\treturn v(tag, this.getNodeAttributes(), this.getChildrenNodes());\n\t\t\t},\n\n\t\t\tget children(this: Widget<WidgetProperties>) {\n\t\t\t\treturn widgetInternalStateMap.get(this).children;\n\t\t\t},\n\n\t\t\tsetChildren(this: Widget<WidgetProperties>, children: DNode[]): void {\n\t\t\t\tconst internalState = widgetInternalStateMap.get(this);\n\t\t\t\tinternalState.children = children;\n\t\t\t\tthis.emit({\n\t\t\t\t\ttype: 'widget:children',\n\t\t\t\t\ttarget: this\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tgetChildrenNodes(this: Widget<WidgetProperties>): DNode[] {\n\t\t\t\treturn this.children;\n\t\t\t},\n\n\t\t\tgetNodeAttributes(this: Widget<WidgetProperties>, overrides?: VNodeProperties): VNodeProperties {\n\t\t\t\tconst props: VNodeProperties = {};\n\n\t\t\t\tthis.nodeAttributes.forEach((fn) => {\n\t\t\t\t\tconst newProps: VNodeProperties = fn.call(this);\n\t\t\t\t\tif (newProps) {\n\t\t\t\t\t\tassign(props, newProps);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn props;\n\t\t\t},\n\n\t\t\tinvalidate(this: Widget<WidgetProperties>): void {\n\t\t\t\tconst internalState = widgetInternalStateMap.get(this);\n\t\t\t\tinternalState.dirty = true;\n\t\t\t\tthis.emit({\n\t\t\t\t\ttype: 'invalidated',\n\t\t\t\t\ttarget: this\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tget id(this: Widget<WidgetProperties>): string | undefined {\n\t\t\t\treturn this.properties['id'];\n\t\t\t},\n\n\t\t\tsetProperties(this: Widget<WidgetProperties>, properties: WidgetProperties) {\n\t\t\t\tconst internalState = widgetInternalStateMap.get(this);\n\n\t\t\t\tconst diffPropertyResults: { [index: string]: PropertyChangeRecord } = {};\n\t\t\t\tconst diffPropertyChangedKeys: string[] = [];\n\n\t\t\t\tinternalState.diffPropertyFunctionMap.forEach((property: string, diffFunctionName: string) => {\n\t\t\t\t\tconst previousProperty = internalState.previousProperties[property];\n\t\t\t\t\tconst newProperty = properties[property];\n\t\t\t\t\tconst result: PropertyChangeRecord = this[diffFunctionName](previousProperty, newProperty);\n\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (result.changed) {\n\t\t\t\t\t\tdiffPropertyChangedKeys.push(property);\n\t\t\t\t\t}\n\t\t\t\t\tdelete properties[property];\n\t\t\t\t\tdelete internalState.previousProperties[property];\n\t\t\t\t\tdiffPropertyResults[property] = result.value;\n\t\t\t\t});\n\n\t\t\t\tconst diffPropertiesResult = this.diffProperties(internalState.previousProperties, properties);\n\t\t\t\tinternalState.properties = assign(diffPropertiesResult.properties, diffPropertyResults);\n\n\t\t\t\tconst changedPropertyKeys = [...diffPropertiesResult.changedKeys, ...diffPropertyChangedKeys];\n\n\t\t\t\tif (changedPropertyKeys.length) {\n\t\t\t\t\tthis.emit({\n\t\t\t\t\t\ttype: 'properties:changed',\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\tproperties: this.properties,\n\t\t\t\t\t\tchangedPropertyKeys\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tinternalState.previousProperties = this.properties;\n\t\t\t},\n\n\t\t\tdiffProperties(this: Widget<WidgetProperties>, previousProperties: WidgetProperties, newProperties: WidgetProperties): PropertiesChangeRecord<WidgetProperties> {\n\t\t\t\tconst changedKeys = Object.keys(newProperties).reduce((changedPropertyKeys: string[], propertyKey: string): string[] => {\n\t\t\t\t\tif (previousProperties[propertyKey] !== newProperties[propertyKey]) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyKey);\n\t\t\t\t\t}\n\t\t\t\t\treturn changedPropertyKeys;\n\t\t\t\t}, []);\n\n\t\t\t\treturn { changedKeys, properties: assign({}, newProperties) };\n\t\t\t},\n\n\t\t\tnodeAttributes: [\n\t\t\t\tfunction (this: Widget<WidgetProperties>): VNodeProperties {\n\t\t\t\t\tconst baseIdProp = this.properties && this.properties['id'] ? { 'data-widget-id': this.properties['id'] } : {};\n\t\t\t\t\tconst { styles = {} } = this.properties || {};\n\t\t\t\t\tconst classes: { [index: string]: boolean; } = {};\n\n\t\t\t\t\tconst internalState = widgetInternalStateMap.get(this);\n\n\t\t\t\t\tinternalState.widgetClasses.forEach((c) => classes[c] = false);\n\n\t\t\t\t\tif (this.properties && this.properties.classes) {\n\t\t\t\t\t\tthis.properties.classes.forEach((c) => classes[c] = true);\n\t\t\t\t\t\tinternalState.widgetClasses =  this.properties.classes;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn assign(baseIdProp, { key: this, classes, styles });\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t__render__(this: Widget<WidgetProperties>): VNode | string | null {\n\t\t\t\tconst internalState = widgetInternalStateMap.get(this);\n\t\t\t\tif (internalState.dirty || !internalState.cachedVNode) {\n\t\t\t\t\tconst widget = dNodeToVNode(this, this.getNode());\n\t\t\t\t\tmanageDetachedChildren(this);\n\t\t\t\t\tif (widget) {\n\t\t\t\t\t\tinternalState.cachedVNode = widget;\n\t\t\t\t\t}\n\t\t\t\t\tinternalState.dirty = false;\n\t\t\t\t\treturn widget;\n\t\t\t\t}\n\t\t\t\treturn internalState.cachedVNode;\n\t\t\t},\n\n\t\t\tregistry: undefined,\n\n\t\t\ttagName: 'div'\n\t\t},\n\t\tinitialize(instance: Widget<WidgetProperties>, options: WidgetOptions<WidgetProperties> = {}) {\n\t\t\tconst { tagName, properties = {} } = options;\n\t\t\tconst diffPropertyFunctionMap = new Map<string, string>();\n\n\t\t\tinstance.tagName = tagName || instance.tagName;\n\n\t\t\tObject.keys(Object.getPrototypeOf(instance)).forEach((attribute) => {\n\t\t\t\tconst match = attribute.match(propertyFunctionNameRegex);\n\t\t\t\tif (match) {\n\t\t\t\t\tdiffPropertyFunctionMap.set(match[0], `${match[1].slice(0, 1).toLowerCase()}${match[1].slice(1)}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twidgetInternalStateMap.set(instance, {\n\t\t\t\tdirty: true,\n\t\t\t\twidgetClasses: [],\n\t\t\t\tproperties: {},\n\t\t\t\tpreviousProperties: {},\n\t\t\t\tinitializedFactoryMap: new Map<string, Promise<WidgetBaseFactory>>(),\n\t\t\t\thistoricChildrenMap: new Map<string | Promise<WidgetBaseFactory> | WidgetBaseFactory, Widget<WidgetProperties>>(),\n\t\t\t\tcurrentChildrenMap: new Map<string | Promise<WidgetBaseFactory> | WidgetBaseFactory, Widget<WidgetProperties>>(),\n\t\t\t\tdiffPropertyFunctionMap,\n\t\t\t\tchildren: []\n\t\t\t});\n\n\t\t\tinstance.own(instance.on('properties:changed', (evt: PropertiesChangeEvent<Widget<WidgetProperties>, WidgetProperties>) => {\n\t\t\t\tinstance.invalidate();\n\t\t\t}));\n\n\t\t\tinstance.setProperties(properties);\n\t\t}\n\t});\n\nexport default createWidget;\n"]}