{"version":3,"file":"createTextInput.js","sourceRoot":"","sources":["createTextInput.ts"],"names":[],"mappings":";;;;;;;;;;IAAA,2DAAsD;IAGtD,0EAAyF;IAiBzF,IAAM,eAAe,GAAqB,0BAAgB;SACxD,KAAK,CAAC,8BAAoB,CAAC;SAC3B,KAAK,CAAC;QACN,KAAK,EAAE;YACN,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,OAAO;YAChB,OAAO,YAAkB,KAAyC;gBACjE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YACjC,CAAC;YACD,cAAc,EAAE;gBACf;oBACC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;gBAClC,CAAC;aACD;SACD;KACD,CAAC,CAAC;;IAEJ,kBAAe,eAAe,CAAC","sourcesContent":["import createWidgetBase from '../../createWidgetBase';\nimport { VNodeProperties } from '@dojo/interfaces/vdom';\nimport { Widget, WidgetProperties, WidgetFactory } from './../../interfaces';\nimport createFormFieldMixin, { FormFieldMixin } from '../../mixins/createFormFieldMixin';\n\n/* TODO: I suspect this needs to go somewhere else */\nexport interface TypedTargetEvent<T extends EventTarget> extends Event {\n\ttarget: T;\n}\n\nexport interface TextInputProperties extends WidgetProperties {\n\tname?: string;\n}\n\nexport type TextInput = Widget<TextInputProperties> & FormFieldMixin<string, any> & {\n\tonInput(event: TypedTargetEvent<HTMLInputElement>): void;\n};\n\nexport interface TextInputFactory extends WidgetFactory<TextInput, TextInputProperties> { }\n\nconst createTextInput: TextInputFactory = createWidgetBase\n\t.mixin(createFormFieldMixin)\n\t.mixin({\n\t\tmixin: {\n\t\t\ttype: 'text',\n\t\t\ttagName: 'input',\n\t\t\tonInput(this: TextInput, event: TypedTargetEvent<HTMLInputElement>) {\n\t\t\t\tthis.value = event.target.value;\n\t\t\t},\n\t\t\tnodeAttributes: [\n\t\t\t\tfunction(this: TextInput): VNodeProperties {\n\t\t\t\t\treturn { oninput: this.onInput };\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n\nexport default createTextInput;\n"]}