import { Widget, WidgetProperties, WidgetFactory } from './../../interfaces';
import { FormFieldMixin } from '../../mixins/createFormFieldMixin';
export interface TypedTargetEvent<T extends EventTarget> extends Event {
    target: T;
}
export interface TextInputProperties extends WidgetProperties {
    name?: string;
}
export declare type TextInput = Widget<TextInputProperties> & FormFieldMixin<string, any> & {
    onInput(event: TypedTargetEvent<HTMLInputElement>): void;
};
export interface TextInputFactory extends WidgetFactory<TextInput, TextInputProperties> {
}
declare const createTextInput: TextInputFactory;
export default createTextInput;
